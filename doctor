#!/usr/bin/env bash
set -e
cd "$(dirname "$0")"

python_cmd=""
if command -v python3 >/dev/null 2>&1; then
  python_cmd="python3"
elif command -v python >/dev/null 2>&1; then
  python_cmd="python"
fi

if [ -z "$python_cmd" ]; then
  echo "Python 3 is not installed. Install it from https://www.python.org/downloads/"
  exit 1
else
  echo "Using $($python_cmd --version)"
fi

status=0

if [ -d "venv" ]; then
  echo "Virtual environment: found"
else
  echo "Virtual environment: missing. Run ./install"
  status=1
fi

# check packages
missing=()
if [ -d "venv" ]; then
  # Use virtual environment python
  venv_python="venv/bin/python"
  for pkg in flask flask_sqlalchemy flask_login flask_wtf flask_dance wtforms werkzeug psycopg2 email_validator oauthlib jwt gunicorn sqlalchemy logfire langsmith opentelemetry.instrumentation.flask opentelemetry.instrumentation.sqlalchemy; do
    if ! $venv_python -c "import ${pkg//-/_}" >/dev/null 2>&1; then
      missing+=("$pkg")
    fi
  done
else
  # Use system python
  for pkg in flask flask_sqlalchemy flask_login flask_wtf flask_dance wtforms werkzeug psycopg2 email_validator oauthlib jwt gunicorn sqlalchemy logfire langsmith opentelemetry.instrumentation.flask opentelemetry.instrumentation.sqlalchemy; do
    if ! $python_cmd -c "import ${pkg//-/_}" >/dev/null 2>&1; then
      missing+=("$pkg")
    fi
  done
fi
if [ ${#missing[@]} -eq 0 ]; then
  echo "Python packages: ok"
else
  echo "Missing packages: ${missing[*]}"
  echo "Run ./install to install missing dependencies"
  status=1
fi

if [ -f ".env" ]; then
  echo ".env file: found"
  set -a
  source .env
  set +a
  if [ -z "$DATABASE_URL" ]; then
    echo "DATABASE_URL is not set in .env"
    status=1
  fi
  if [ -z "$SESSION_SECRET" ]; then
    echo "SESSION_SECRET is not set in .env"
    status=1
  fi
  if [ -z "$LOGFIRE_API_KEY" ]; then
    echo "Logfire observability: disabled (LOGFIRE_API_KEY is not set)"
  else
    echo "Logfire observability: enabled"
  fi
  if [ -z "$LOGFIRE_PROJECT_URL" ]; then
    echo "Logfire project link: not configured (set LOGFIRE_PROJECT_URL for UI links)"
  else
    echo "Logfire project link: $LOGFIRE_PROJECT_URL"
  fi
  if [ -z "$LANGSMITH_API_KEY" ]; then
    echo "LangSmith integration: disabled (LANGSMITH_API_KEY is not set)"
  else
    echo "LangSmith integration: enabled"
  fi
  if [ -z "$LANGSMITH_PROJECT_URL" ]; then
    echo "LangSmith project link: not configured (set LANGSMITH_PROJECT_URL for UI links)"
  else
    echo "LangSmith project link: $LANGSMITH_PROJECT_URL"
  fi
else
  echo ".env file: missing. Run ./install or copy .env.sample to .env"
  status=1
fi

if [ $status -eq 0 ]; then
  echo "Environment looks good. Use ./run to start the app."
else
  echo "One or more checks failed. See messages above for how to fix them."
fi

exit $status
