#!/usr/bin/env python3
"""Run both the pytest suite and Gauge specifications."""

from __future__ import annotations

import subprocess
import sys
from collections.abc import Sequence

from tests.test_support import ROOT_DIR, build_test_environment


def main(argv: Sequence[str] | None = None) -> int:
    if argv is None:
        argv = sys.argv[1:]

    env = build_test_environment()

    ruff_command = [sys.executable, "-m", "ruff", "check"]
    ruff_result = subprocess.call(ruff_command, cwd=str(ROOT_DIR), env=env)
    if ruff_result != 0:
        return ruff_result

    pylint_command = [sys.executable, "-m", "pylint", "--errors-only", "."]
    pylint_result = subprocess.call(pylint_command, cwd=str(ROOT_DIR), env=env)
    if pylint_result != 0:
        return pylint_result

    unit_command = [str(ROOT_DIR / "test-unit"), *argv]
    unit_result = subprocess.call(unit_command, cwd=str(ROOT_DIR), env=env)
    if unit_result != 0:
        return unit_result

    gauge_command = [str(ROOT_DIR / "test-gauge")]
    return subprocess.call(gauge_command, cwd=str(ROOT_DIR), env=env)


if __name__ == "__main__":
    raise SystemExit(main())
