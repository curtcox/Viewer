name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request:

permissions:
  contents: read

jobs:
  lint:
    name: Ruff Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Ruff
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Run Ruff
        run: ruff check .

  tests:
    name: Unit Tests and Coverage
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: sqlite:////tmp/secureapp-ci.db
      SESSION_SECRET: test-secret-key
      TESTING: "True"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Gauge CLI
        run: |
          curl -fsSL https://downloads.gauge.org/stable | sh
          echo "$HOME/.gauge/bin" >> "$GITHUB_PATH"

      - name: Install Gauge plugins
        run: |
          gauge install python
          gauge install html-report

      - name: Run tests with coverage
        id: run_tests
        run: |
          python run_coverage.py --xml --html --summary-file coverage-report.txt
        continue-on-error: true

      - name: Publish coverage summary
        id: coverage
        if: always()
        run: |
          if [ -f "coverage-report.txt" ]; then
            cat coverage-report.txt
            {
              echo "### Coverage summary"
              echo '```'
              cat coverage-report.txt
              echo '```'
            } >> "$GITHUB_STEP_SUMMARY"
            echo "generated=true" >> "$GITHUB_OUTPUT"
          else
            echo "No coverage data found. Tests may not have run." | tee coverage-report.txt
            {
              echo "### Coverage summary"
              echo
              echo "No coverage data was generated."
            } >> "$GITHUB_STEP_SUMMARY"
            echo "generated=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Upload coverage XML
        if: always() && steps.coverage.outputs.generated == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

      - name: Upload HTML coverage report
        if: always() && steps.coverage.outputs.generated == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov

      - name: Run Gauge specs
        run: gauge run specs
        env:
          GAUGE_PYTHON_COMMAND: python3
          STEP_IMPL_DIR: tests/step_impl
          PYTHONPATH: "${{ github.workspace }}:${{ github.workspace }}/tests"

      - name: Fail if tests failed
        if: steps.run_tests.outcome == 'failure'
        run: exit 1
